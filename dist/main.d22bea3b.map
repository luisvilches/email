{"version":3,"sources":["main.js"],"names":["mediaQuery","media","pixels","query","toString","window","matchMedia","matches","customTag","tagName","fn","document","createElement","tagInstances","getElementsByTagName","i","length","col2","element","content","innerHTML","style","width","display","minHeight","position","addEventListener","console","log","container","marginRight","marginLeft"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,GAA2D;AAAA,QAAvCC,KAAuC,uEAA/B,iBAA+B;AAAA,QAAbC,MAAa,uEAAJ,GAAI;;AACvD,QAAIC,KAAJ;AACA,QAAGF,UAAU,WAAV,IAAyBA,UAAU,WAAnC,IAAkDA,UAAU,YAA5D,IAA4EA,UAAU,YAAV,IAA0B,OAAOC,MAAP,KAAkB,QAA3H,EAAoI;AAChIC,gBAAQF,QAAQ,GAAR,GAAcC,OAAOE,QAAP,EAAd,GAAkC,IAA1C;AACH;;AAED,QAAGC,OAAOC,UAAP,OAAsBH,KAAtB,QAAgCI,OAAnC,EAA2C;AACvC,eAAO,IAAP;AACH,KAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ;;AAED,SAASC,SAAT,CAAmBC,OAAnB,EAA2BC,EAA3B,EAA8B;AAC1BC,aAASC,aAAT,CAAuBH,OAAvB;AACA;AACA,QAAII,eAAeF,SAASG,oBAAT,CAA8BL,OAA9B,CAAnB;AACA;AACA,SAAM,IAAIM,IAAI,CAAd,EAAiBA,IAAIF,aAAaG,MAAlC,EAA0CD,GAA1C,EAA+C;AAC3CL,WAAGG,aAAaE,CAAb,CAAH;AACH;AACJ;;AAED,SAASE,IAAT,CAAcC,OAAd,EAAsB;AAClB,QAAIC,UAAUD,QAAQE,SAAtB;AACAF,YAAQG,KAAR,CAAcC,KAAd,GAAsB,KAAtB;AACAJ,YAAQG,KAAR,CAAcE,OAAd,GAAwB,cAAxB;AACAL,YAAQG,KAAR,CAAcG,SAAd,GAA0B,KAA1B;AACAN,YAAQG,KAAR,CAAcI,QAAd,GAAyB,UAAzB;;AAEApB,WAAOqB,gBAAP,CAAwB,QAAxB,EAAkC,YAAU;AACxCC,gBAAQC,GAAR,CAAY5B,WAAW,WAAX,EAAuB,GAAvB,CAAZ;AACA,YAAGA,WAAW,WAAX,EAAuB,GAAvB,CAAH,EAA+B;AAC3BkB,oBAAQG,KAAR,CAAcC,KAAd,GAAsB,MAAtB;AACH;AACJ,KALD;;AAOAJ,YAAQE,SAAR,GAAoB,SAAOD,OAAP,GAAe,OAAnC;AACH;;AAED,SAASU,SAAT,CAAmBX,OAAnB,EAA2B;AACvB,QAAIC,UAAUD,QAAQE,SAAtB;AACAF,YAAQG,KAAR,CAAcS,WAAd,GAA4B,MAA5B;AACAZ,YAAQG,KAAR,CAAcU,UAAd,GAA2B,MAA3B;AACAb,YAAQG,KAAR,CAAcC,KAAd,GAAsB,MAAtB;AACAJ,YAAQE,SAAR,GAAoB,mBAAiBD,OAAjB,GAAyB,kBAA7C;AACH;;AAEDR,SAASe,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AACpDlB,cAAU,OAAV,EAAkBS,IAAlB;AACAT,cAAU,aAAV,EAAwBqB,SAAxB;AACH,CAHD","file":"main.d22bea3b.map","sourceRoot":"..","sourcesContent":["function mediaQuery(media = \"min-width:768px\",pixels = 768){\n    var query;\n    if(media === \"max-width\" || media === \"min-width\" || media === \"max-height\" || media === \"min-height\" && typeof pixels === \"number\"){\n        query = media + \":\" + pixels.toString() + 'px';\n    }\n\n    if(window.matchMedia(`(${query})`).matches){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction customTag(tagName,fn){\n    document.createElement(tagName);\n    //find all the tags occurrences (instances) in the document\n    var tagInstances = document.getElementsByTagName(tagName);\n    //for each occurrence run the associated function\n    for ( var i = 0; i < tagInstances.length; i++) {\n        fn(tagInstances[i]);\n    }\n}\n   \nfunction col2(element){\n    var content = element.innerHTML;\n    element.style.width = \"50%\";\n    element.style.display = \"inline-block\";\n    element.style.minHeight = \"1px\";\n    element.style.position = \"relative\";\n\n    window.addEventListener('resize', function(){\n        console.log(mediaQuery(\"max-width\",768))\n        if(mediaQuery(\"max-width\",768)){\n            element.style.width = \"100%\";\n        }\n    });\n\n    element.innerHTML = \"<td>\"+content+\"</td>\";\n} \n\nfunction container(element){\n    let content = element.innerHTML;\n    element.style.marginRight = \"auto\";\n    element.style.marginLeft = \"auto\";    \n    element.style.width = \"100%\";\n    element.innerHTML = \"<table><tbody>\"+content+\"</tbody></table>\";\n}   \n\ndocument.addEventListener('DOMContentLoaded', function(){\n    customTag(\"col-2\",col2);\n    customTag(\"e-container\",container);\n})"]}